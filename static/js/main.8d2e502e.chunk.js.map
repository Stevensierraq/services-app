{"version":3,"sources":["store/reducers/services.js","store/reducers/authenticate.js","store/index.js","theme.js","components/forms/login-form.js","pages/login.js","actionCreators.js","components/forms/service-form.js","components/header.js","components/list/item.js","components/list/index.js","pages/dashboard.js","App.js","serviceWorker.js","index.js"],"names":["services","state","arguments","length","undefined","action","type","date","Date","toLocaleString","concat","Object","objectSpread","service","filter","authenticate","auth","reducer","combineReducers","form","formReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","theme","createMuiTheme","palette","primary","main","secondary","renderInput","_ref2","input","_ref2$meta","meta","error","touched","label","react_default","a","createElement","style","margin","FormControl_default","InputLabel_default","htmlFor","Input_default","id","inputProps","name","startAdornment","InputAdornment_default","position","VpnKey_default","AccountCircle_default","Typography_default","color","LoginForm","props","handleSubmit","padding","borderRadius","backgroundColor","onSubmit","component","variant","gutterBottom","Field","Button_default","size","reduxForm","validate","_ref","userName","password","errors","Login","submit","user","_this$props","_this","login","history","push","alert","className","login_form","this","Component","connect","isAuth","dispatch","width","multiline","LocalShipping_default","Room_default","ServiceForm","border","description","from","to","withStyles","root","flexGrow","grow","menuButton","marginLeft","marginRight","classes","handleLogout","AppBar_default","Toolbar_default","onClick","Item","handler","Card_default","fontWeight","CardActions_default","disableActionSpacing","List","deleteService","height","CardActionArea_default","src","alt","CardContent_default","align","marginTop","fontSize","Grid_default","container","map","item","assign","key","Dashboard","addService","resetForm","_this$props2","logout","header","xs","md","list","service_form","reset","AuthRoute","Route","path","render","dashboard","Redirect","App","styles","BrowserRouter","Switch","exact","App_AuthRoute","Boolean","location","hostname","match","document","getElementById","ReactDOM","es","store","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8d2e502e.chunk.js","sourcesContent":["const services = (state=[], action) => {\n    switch (action.type) {\n      case 'ADD_SERVICE':\n        const date = new Date().toLocaleString();\n        return state.concat({...action.service, date})\n      case 'DELETE_SERVICE':\n        return state.filter(service => service.date !== action.service)\n      default: \n        return state;\n    }\n};\n\nexport default services;","const authenticate = (auth=false, action) => {\n    switch (action.type) {\n      case 'LOGIN':\n        return true;\n      case 'LOGOUT':\n        return false;\n      default: \n        return auth;\n    }\n};\n\nexport default authenticate;","import { createStore, combineReducers } from 'redux';\nimport { reducer as formReducer } from 'redux-form';\n\nimport services from './reducers/services';\nimport authenticate from './reducers/authenticate';\n\nconst reducer = combineReducers({ \n  services,\n  authenticate,\n  form: formReducer\n});\n\nconst initState = {\n  services: [],\n  authenticate: false\n};\n\nexport default createStore(reducer, initState, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: { main: '#5151cc' },\n        secondary: { main: 'rgb(254, 100, 45)' },\n    }\n});\n\nexport default theme;","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport KeyIcon from '@material-ui/icons/VpnKey';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst validate = ({userName, password}) => {\n    const errors = {}\n    if(!userName) errors.userName = 'Required'\n    if(!password) errors.password = 'Required'\n\n    return errors\n}\n\nconst renderInput = ({ input, meta: {error, touched}, label }) => \n    <div style={{margin: 12}}>\n        <FormControl error={error && touched}>\n            <InputLabel htmlFor={label}>{label}</InputLabel>\n            <Input\n                id={label}\n                inputProps={{...input}}\n                type={input.name === \"password\"? \"password\" : \"text\"}\n                startAdornment={\n                    <InputAdornment position=\"start\">\n                        {\n                            input.name === 'password'\n                            ? <KeyIcon />\n                            : <AccountCircle />\n                        }\n                    </InputAdornment>\n                }\n            />\n        </FormControl>\n        {\n            error && touched &&\n                <Typography style={{color: 'red'}}>{error}</Typography>\n        }\n    </div>\n\nlet LoginForm = props => {\n  const { handleSubmit } = props\n  return (\n      <div style={{ padding: '40px 20px 25px 20px', borderRadius:5, backgroundColor: 'white' }}>\n        <form onSubmit={handleSubmit}>\n            <Typography component=\"h2\" variant=\"display1\" gutterBottom>\n                Services\n            </Typography>\n            <Field name=\"userName\" label=\"Username\" component={renderInput} type=\"text\" />\n            <Field name=\"password\" type=\"password\" label=\"Password\" component={renderInput} />\n            <Button \n                variant=\"contained\" \n                size=\"large\" \n                color=\"secondary\" \n                type=\"submit\" \n                style={{margin: 8, color: 'white'}}\n            >\n                Login\n            </Button>\n        </form>\n      </div>\n  )\n}\n\nLoginForm = reduxForm({\n  form: 'login',\n  validate\n})(LoginForm)\n\nexport default LoginForm\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { login } from '../actionCreators';\nimport LoginForm from '../components/forms/login-form';\nimport '../App.css';\n\nclass Login extends Component {\n  submit = (user) => {\n    const {login, history} = this.props\n    if(user.userName === \"liftit\" && user.password === \"contratame\"){\n        login(user);\n        history.push('/dashboard');\n    }else{\n        alert('Incorrect user or password')\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <LoginForm onSubmit={this.submit} />\n          </header>\n        </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n      isAuth: state.authenticate\n    };\n};\n  \nconst mapDispatchProps = dispatch => {\n    return {\n      login(user) {\n        dispatch(login(user));\n      }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Login);","const addService = service => {\n    return {\n      type: 'ADD_SERVICE',\n      service\n    };\n  };\n  \n  const deleteService = service => {\n    return {\n      type: 'DELETE_SERVICE',\n      service\n    };\n  };\n\n  const login = user => {\n    return {\n      type: 'LOGIN',\n      user\n    };\n  };\n\n  const logout = user => {\n    return {\n      type: 'LOGOUT',\n      user\n    };\n  };\n  \n  export {\n    addService,\n    deleteService,\n    login,\n    logout\n  };","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport RoomIcon from '@material-ui/icons/Room';\nimport ShippingIcon from '@material-ui/icons/LocalShipping';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst validate = ({description, from, to}) => {\n    const errors = {}\n    if(!description) errors.description = 'Required'\n    if(!from) errors.from = 'Required'\n    if(!to) errors.to = 'Required'\n\n    return errors\n}\n\nconst renderInput = ({ input, meta: {error, touched}, label }) => \n    <div style={{margin: 10, width: 200}}>\n        <FormControl error={error && touched}>\n            <InputLabel htmlFor={label}>{label}</InputLabel>\n            <Input\n            id={label}\n            multiline={input.name === 'description'}\n            inputProps={{...input}}\n            startAdornment={\n                <InputAdornment position=\"start\">\n                    {\n                        input.name === 'description'\n                        ? <ShippingIcon style={{color: 'gray'}}/>\n                        : <RoomIcon style={{color: 'gray'}}/>\n                    }\n                </InputAdornment>\n            }\n            />\n        </FormControl>\n        {\n            error && touched &&\n                <Typography style={{color: 'red'}}>{error}</Typography>\n        }\n    </div>\n\nlet ServiceForm = props => {\n  const { handleSubmit } = props\n  return (\n      <div \n        style={{ \n            padding: '25px 15px 20px 15px', \n            borderRadius: 5,\n            margin: '20px auto',\n            width: 210, \n            border: '1px solid lightGray',\n            backgroundColor: 'white' \n        }}\n      >\n        <form onSubmit={handleSubmit}>\n            <Typography component=\"h2\" variant=\"display1\" gutterBottom>\n                New service\n            </Typography>\n            <Field name=\"description\" type=\"textarea\" label=\"Description\" component={renderInput} />\n            <Field name=\"from\" type=\"textarea\" label=\"From\" component={renderInput} /> \n            <Field name=\"to\" type=\"textarea\" label=\"To\" component={renderInput} />          \n            <Button \n                variant=\"contained\" \n                color=\"secondary\" \n                type=\"submit\" \n                style={{margin: 8, color: 'white', width: 205}}\n            >\n                Create\n            </Button>\n        </form>\n      </div>\n  )\n}\n\nServiceForm = reduxForm({\n  form: 'service',\n  validate\n})(ServiceForm)\n\nexport default ServiceForm","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\nconst styles = {\n  root: {\n    flexGrow: 1,\n  },\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20,\n  },\n};\n\nfunction Header(props) {\n  const { classes, handleLogout } = props;\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.grow}>\n            SERVICES APP\n          </Typography>\n          <Button color=\"inherit\" onClick={handleLogout}>Logout</Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  handleLogout: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Header);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst Item = ({ description, from, to, date, handler }) => (\n    <Card style={{width: 260, margin: 7}}>\n      <div style={{padding: 10}}>\n        <Typography variant=\"title\" color=\"secondary\" gutterBottom>\n          {description}\n        </Typography>\n        <Typography component=\"p\">\n          <span style={{fontWeight: 'bold'}}>From: </span> {from}\n        </Typography>\n        <Typography component=\"p\">\n          <span style={{fontWeight: 'bold'}}>To: </span> {to}\n        </Typography>\n      </div>\n      <CardActions disableActionSpacing>\n        <Typography variant=\"body1\" color=\"textSecondary\">\n          {date}\n        </Typography>\n        <Button \n          style={{marginLeft: 'auto', color: 'red'}}\n          onClick={() => handler(date)}\n        >\n          Delete\n        </Button>\n      </CardActions>\n    </Card>\n);\n\nItem.propTypes = {\n    description: PropTypes.string.isRequired,\n    from: PropTypes.string.isRequired,\n    to: PropTypes.string.isRequired,\n    date: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired,\n};\n\nexport default Item;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Item from './item';\n\nfunction List ({services, deleteService}) {\n    if(services.length === 0) {\n        return<Card style={{height: 350, width: 500, marginLeft: 'auto', marginRight: 'auto'}}>\n            <CardActionArea>\n            <img src=\"https://upload.wikimedia.org/wikipedia/sr/8/8b/Google_Maps_screenshot.png\" alt=\"map\"/>\n            <CardContent>\n                <Typography \n                    align=\"center\" \n                    component=\"h1\" \n                    color=\"secondary\" \n                    variant=\"display1\" \n                    style={{marginTop: 0, fontSize: '5vh'}}\n                    gutterBottom\n                >\n                    Get start =>\n                </Typography>\n            </CardContent>\n            </CardActionArea>\n        </Card>\n    }\n\n    return<Grid container>\n        {\n          services.map(service => \n                <Item \n                    {...service}\n                    handler={deleteService}\n                    key={service.description}\n                />\n            )  \n        }\n    </Grid>\n};\n\nList.propTypes = {\n    deleteService: PropTypes.func.isRequired,\n    services: PropTypes.array.isRequired,\n};\n\nexport default List","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { reset } from 'redux-form';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\n\nimport ServiceForm from '../components/forms/service-form';\nimport Header from '../components/header';\nimport List from '../components/list';\nimport { \n    addService, \n    deleteService,\n    logout\n} from '../actionCreators';\n\nclass Dashboard extends Component {\n    submit = service => {\n        const { addService, resetForm } = this.props\n        addService(service)\n        resetForm()\n    }\n\n    deleteService = service => this.props.deleteService(service)\n\n    handleLogout = () => {\n        const { logout, history } = this.props\n        logout({user: 'liftit'});\n        if(history) history.push('/');\n    }\n\n    render(){\n        const { services } = this.props\n        return<div>\n            <Header handleLogout={this.handleLogout} />\n            <Grid container style={{marginTop: 20}}>\n                <Grid item xs={12} md={8}>\n                    <Typography align=\"center\" component=\"h2\" variant=\"display1\" gutterBottom>\n                        My Services\n                    </Typography>\n                    <List \n                        services={services}\n                        deleteService={this.deleteService}\n                    />\n                </Grid>\n                <Grid item xs={4}>\n                    <ServiceForm onSubmit={this.submit}/>\n                    \n                </Grid>\n            </Grid>\n        </div>\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n      services: state.services\n    };\n};\n  \nconst mapDispatchProps = dispatch => {\n    return {\n      addService(service) {\n        dispatch(addService(service));\n      },\n      deleteService(service) {\n        dispatch(deleteService(service));\n      },\n      resetForm(){\n          dispatch(reset('service'));\n      },\n      logout(user){\n        dispatch(logout(user));\n    }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchProps)(Dashboard);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport theme from './theme';\nimport Login from './pages/login';\nimport Dashboard from './pages/dashboard';\n\nconst AuthRoute = ({isAuth}) => (\n  <Route path=\"/dashboard\" render={() => (\n    isAuth === true\n      ? <Dashboard />\n      : <Redirect to=\"/\" />\n  )} />\n);\n\nclass App extends Component {\n\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <Router>\n          <div>\n            <Switch>\n              <Route exact path='/' component={Login} />\n              <AuthRoute isAuth={this.props.isAuth}/>\n            </Switch>\n          </div>\n        </Router>\n      </MuiThemeProvider>\n    );\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.authenticate\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, \n  root\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}